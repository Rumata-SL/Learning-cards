{"version":3,"file":"static/js/NewPassword.51324290.chunk.js","mappings":"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","sources":["webpack://hw14/./src/features/auth/newPassword/NewPassword.module.css?f77a","features/auth/newPassword/NewPassword.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"NewPassword_formContainer__MyQbc\",\"title\":\"NewPassword_title__Zg6lJ\",\"input\":\"NewPassword_input__vPqxG\",\"link\":\"NewPassword_link__zikY3\",\"btn\":\"NewPassword_btn__xqrVB\",\"instructionsText\":\"NewPassword_instructionsText__hh7tg\",\"error\":\"NewPassword_error__2D-81\",\"inputBlock\":\"NewPassword_inputBlock__zPezJ\"};","import React, { useState } from 'react'\r\n\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material'\r\nimport { FormControl, IconButton, Input, InputAdornment, InputLabel } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../bll/store'\r\nimport SuperButton from '../../../common/components/superButton/SuperButton'\r\n\r\nimport style from './NewPassword.module.css'\r\nimport { createNewPasswordTC } from './newPasswordReducer'\r\n\r\ntype FormikErrorType = {\r\n  email?: string\r\n  password?: string\r\n  confirmPassword?: string\r\n}\r\n\r\nconst NewPassword = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isCreated = useAppSelector<boolean>(state => state.newPassword.isCreated)\r\n  const isLoggedIn = useAppSelector<boolean>(state => state.login.isLoggedIn)\r\n\r\n  // const navigate = useNavigate(); ????\r\n  const [showValuePass, setShowValuePass] = useState(false)\r\n  const [showValuePassConfirm, setShowValuePassConfirm] = useState(false)\r\n\r\n  let params = useParams()\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n\r\n    validate: values => {\r\n      const error: FormikErrorType = {}\r\n\r\n      if (!values.password) {\r\n        error.password = 'Required'\r\n      } else if (values.password.length <= 7) {\r\n        error.password = 'Password must be more than 7 characters...'\r\n      }\r\n      if (!values.confirmPassword) {\r\n        error.confirmPassword = 'Required'\r\n      } else if (values.confirmPassword !== values.password) {\r\n        error.confirmPassword = 'The password and confirmation password do not match'\r\n      }\r\n\r\n      return error\r\n    },\r\n    onSubmit: values => {\r\n      dispatch(createNewPasswordTC(values.password, params.token ? params.token : ''))\r\n    },\r\n  })\r\n\r\n  const clickShowPass = () => {\r\n    setShowValuePass(!showValuePass)\r\n  }\r\n  const clickShowConfirmPass = () => {\r\n    setShowValuePassConfirm(!showValuePassConfirm)\r\n  }\r\n\r\n  const MouseDownPass = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  // if (isCreated) {\r\n  //     navigate('/login')\r\n  // }\r\n\r\n  if (isCreated) {\r\n    return <Navigate to={'/login/'} />\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Navigate to={'/profile/'} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <form className={style.formContainer} onSubmit={formik.handleSubmit}>\r\n        <div className={style.title}>Create new password</div>\r\n\r\n        <div className={style.instructionsText}>\r\n          Create new password and we will send you further instructions to email\r\n        </div>\r\n\r\n        <FormControl className={style.inputBlock} variant=\"standard\">\r\n          <InputLabel color={'secondary'}>Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type={showValuePass ? 'text' : 'password'}\r\n            placeholder={'Password'}\r\n            className={style.input}\r\n            color={'secondary'}\r\n            {...formik.getFieldProps('password')}\r\n            autoComplete=\"on\"\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={clickShowPass} onMouseDown={MouseDownPass} color={'primary'}>\r\n                  {showValuePass ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {formik.errors.password && formik.touched.password && (\r\n            <div className={style.error}>{formik.errors.password}</div>\r\n          )}\r\n        </FormControl>\r\n\r\n        <FormControl className={style.inputBlock} variant=\"standard\">\r\n          <InputLabel color={'secondary'}>Confirm password</InputLabel>\r\n          <Input\r\n            id=\"confirmPassword\"\r\n            type={showValuePassConfirm ? 'text' : 'password'}\r\n            placeholder={'Confirm password'}\r\n            className={style.input}\r\n            color={'secondary'}\r\n            {...formik.getFieldProps('confirmPassword')}\r\n            autoComplete=\"on\"\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={clickShowConfirmPass}\r\n                  onMouseDown={MouseDownPass}\r\n                  color={'primary'}\r\n                >\r\n                  {showValuePassConfirm ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {formik.errors.confirmPassword && formik.touched.confirmPassword && (\r\n            <div className={style.error}>{formik.errors.confirmPassword}</div>\r\n          )}\r\n        </FormControl>\r\n\r\n        <SuperButton\r\n          style={{\r\n            fontFamily: 'Montserrat',\r\n            fontStyle: 'normal',\r\n            fontWeight: 500,\r\n            fontSize: '16px',\r\n            lineHeight: '20px',\r\n            letterSpacing: '0.01em',\r\n          }}\r\n          type=\"submit\"\r\n        >\r\n          Create new password\r\n        </SuperButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewPassword\r\n"],"names":["dispatch","useAppDispatch","isCreated","useAppSelector","state","newPassword","isLoggedIn","login","useState","showValuePass","setShowValuePass","showValuePassConfirm","setShowValuePassConfirm","params","useParams","formik","useFormik","initialValues","password","confirmPassword","validate","values","error","length","onSubmit","createNewPasswordTC","token","MouseDownPass","e","preventDefault","to","className","style","handleSubmit","FormControl","variant","InputLabel","color","Input","id","type","placeholder","getFieldProps","autoComplete","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","VisibilityOff","Visibility","errors","touched","SuperButton","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing"],"sourceRoot":""}