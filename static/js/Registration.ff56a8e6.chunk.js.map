{"version":3,"file":"static/js/Registration.ff56a8e6.chunk.js","mappings":"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","sources":["webpack://hw14/./src/features/auth/registration/Registration.module.css?594e","features/auth/registration/Registration.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"Registration_formContainer__pxoO2\",\"title\":\"Registration_title__cAmO-\",\"link\":\"Registration_link__-XkO6\",\"text\":\"Registration_text__HgTU5\",\"input\":\"Registration_input__+KzDN\",\"emailError\":\"Registration_emailError__4UDVZ\",\"passwordError\":\"Registration_passwordError__6MxAG\",\"confirmPasswordError\":\"Registration_confirmPasswordError__9tOYz\"};","import React, { FC, useCallback, useState } from 'react'\r\n\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material'\r\nimport { FormControl, IconButton, Input, InputAdornment, InputLabel } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport { Link, Navigate } from 'react-router-dom'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../bll/store'\r\nimport SuperButton from '../../../common/components/superButton/SuperButton'\r\n\r\nimport style from './Registration.module.css'\r\nimport { registerTC } from './registrationReducer'\r\n\r\ntype FormikErrorType = {\r\n  email?: string\r\n  password?: string\r\n  confirmPassword?: string\r\n}\r\n\r\nconst Registration: FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isLoggedIn = useAppSelector<boolean>(state => state.login.isLoggedIn)\r\n\r\n  const [valuePass, setValuePass] = useState({\r\n    password: '',\r\n    showPass: false,\r\n  })\r\n  const [valuePassConfirm, setValuePassConfirm] = useState({\r\n    passwordConfirm: '',\r\n    showPassConfirm: false,\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validate: values => {\r\n      const errors: FormikErrorType = {}\r\n\r\n      if (!values.email) {\r\n        errors.email = 'Enter email'\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n      }\r\n      if (!values.password) {\r\n        errors.password = 'Enter password'\r\n      } else if (values.password.length <= 7) {\r\n        errors.password = 'Password must be more than 7 characters...'\r\n      }\r\n      if (!values.confirmPassword) {\r\n        errors.confirmPassword = 'Repeat  password'\r\n      } else if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = 'The password and confirmation password do not match'\r\n      }\r\n\r\n      return errors\r\n    },\r\n    onSubmit: values => {\r\n      dispatch(registerTC(values))\r\n    },\r\n  })\r\n\r\n  const clickShowPass = useCallback(() => {\r\n    setValuePass({\r\n      ...valuePass,\r\n      showPass: !valuePass.showPass,\r\n    })\r\n  }, [valuePass])\r\n\r\n  const clickShowConfirmPass = useCallback(() => {\r\n    setValuePassConfirm({\r\n      ...valuePassConfirm,\r\n      showPassConfirm: !valuePassConfirm.showPassConfirm,\r\n    })\r\n  }, [valuePassConfirm])\r\n\r\n  const MouseDownPass = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Navigate to={'/login'} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <form className={style.formContainer} onSubmit={formik.handleSubmit}>\r\n        <div className={style.title}>Sign UP</div>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel color=\"primary\">Email</InputLabel>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder={'Email'}\r\n            className={style.input}\r\n            color={'primary'}\r\n            {...formik.getFieldProps('email')}\r\n          />\r\n        </FormControl>\r\n        {formik.errors.email && formik.touched.email && (\r\n          <div className={style.emailError}>{formik.errors.email}</div>\r\n        )}\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel color={'primary'}>Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type={valuePass.showPass ? 'text' : 'password'}\r\n            placeholder={'Password'}\r\n            className={style.input}\r\n            color={'primary'}\r\n            {...formik.getFieldProps('password')}\r\n            autoComplete=\"on\"\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={clickShowPass} onMouseDown={MouseDownPass} color={'primary'}>\r\n                  {valuePass.showPass ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        {formik.errors.password && formik.touched.password && (\r\n          <div className={style.passwordError}>{formik.errors.password}</div>\r\n        )}\r\n\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel color={'primary'}>Confirm password</InputLabel>\r\n          <Input\r\n            id=\"confirmPassword\"\r\n            type={valuePassConfirm.showPassConfirm ? 'text' : 'password'}\r\n            placeholder={'Confirm password'}\r\n            className={style.input}\r\n            color={'primary'}\r\n            {...formik.getFieldProps('confirmPassword')}\r\n            autoComplete=\"on\"\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={clickShowConfirmPass}\r\n                  onMouseDown={MouseDownPass}\r\n                  color={'primary'}\r\n                >\r\n                  {valuePassConfirm.showPassConfirm ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        {formik.errors.confirmPassword && formik.touched.confirmPassword && (\r\n          <div className={style.confirmPasswordError}>{formik.errors.confirmPassword}</div>\r\n        )}\r\n        <SuperButton\r\n          style={{\r\n            fontFamily: 'Montserrat',\r\n            fontStyle: 'normal',\r\n            fontWeight: 500,\r\n            fontSize: '16px',\r\n            lineHeight: '20px',\r\n            letterSpacing: '0.01em',\r\n          }}\r\n          type=\"submit\"\r\n        >\r\n          Sign Up\r\n        </SuperButton>\r\n        <span className={style.text}>Already have an account?</span>\r\n\r\n        <Link className={style.link} to={'/login'}>\r\n          Sign In\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registration\r\n"],"names":["dispatch","useAppDispatch","isLoggedIn","useAppSelector","state","login","useState","password","showPass","valuePass","setValuePass","passwordConfirm","showPassConfirm","valuePassConfirm","setValuePassConfirm","formik","useFormik","initialValues","email","confirmPassword","validate","values","errors","test","length","onSubmit","registerTC","clickShowPass","useCallback","clickShowConfirmPass","MouseDownPass","e","preventDefault","to","className","style","handleSubmit","FormControl","variant","InputLabel","color","Input","id","type","placeholder","getFieldProps","touched","autoComplete","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","VisibilityOff","Visibility","SuperButton","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing"],"sourceRoot":""}